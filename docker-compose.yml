services:
  
  db:
    image: postgres:15.4-bullseye
    ports:
      - 5432:5432
    restart: always
    env_file:
      .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 1s
      timeout: 5s
      retries: 10
    volumes:
      - ./postgres:/var/lib/postgresql/data
  
  api:
    build:
      context: ./app
      dockerfile: ./app/Dockerfile
    image: sotw-api:latest
    ports:
      - "9000:8000"
    restart: always
    volumes:
      - type: bind
        source: ./app
        target: /usr/src/app
    env_file:
      .env
    depends_on:
      - db

  frontend:
    build:
      context: ./frontend
      dockerfile: ./frontend/Dockerfile
    image: sotw-frontend:latest
    command: npm run serve-prod
    volumes:
      - ./frontend:/usr/src/frontend
      - /usr/src/frontend/node_modules
    ports:
      - "8080:8080"
    depends_on:
      - db

  nginx:
    build:
      context: ./nginx
      dockerfile: ./nginx/Dockerfile
    restart: unless-stopped
    image: sotw-nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      # - "443:443"
    # environment:
    #   - CERTBOT_EMAIL=youremail@gmail.com
    # volumes:
      # - letsencrypt:/etc/letsencrypt
    depends_on:
      - api
      - frontend
    logging:
      driver: "json-file"
      options:
        max-size: "100k"
        max-file: "1"
volumes:
  postgres_data: